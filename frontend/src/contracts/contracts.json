{
  "network": "monad_testnet",
  "chainId": 10143,
  "contracts": {
    "TraderAgent": {
      "address": "0x7267749E1Fa24Cae44e1B76Ec90F3B2f98D2C290",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            }
          ],
          "name": "LimitOrderCancelled",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            }
          ],
          "name": "LimitOrderExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "targetPrice",
              "type": "uint256"
            }
          ],
          "name": "LimitOrderPlaced",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ],
          "name": "OrderExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MIN_EXECUTION_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "routeData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct ITraderAgent.OrderParams[]",
              "name": "orders",
              "type": "tuple[]"
            }
          ],
          "name": "batchExecuteOrders",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            }
          ],
          "name": "cancelLimitOrder",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            }
          ],
          "name": "executeLimitOrder",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "routeData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct ITraderAgent.OrderParams",
              "name": "params",
              "type": "tuple"
            }
          ],
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            }
          ],
          "name": "getOrderDetails",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "targetPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                }
              ],
              "internalType": "struct ITraderAgent.LimitOrder",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "getUserOrders",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "limitOrders",
          "outputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextOrderId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "name": "placeLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "orderId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "userOrders",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ]
    },
    "RouterDefense": {
      "address": "0x458Ec2Bc6E645ccd8f98599D6E4d942ea480ca16",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_swapRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "orderCount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalGasSaved",
              "type": "uint256"
            }
          ],
          "name": "BatchExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "name": "CommitmentMade",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "name": "OrderRevealed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "percentage",
                  "type": "uint256"
                }
              ],
              "indexed": false,
              "internalType": "struct IRouterDefense.Route[]",
              "name": "routes",
              "type": "tuple[]"
            }
          ],
          "name": "SwapExecuted",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "COMMIT_REVEAL_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_BATCH_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "SLIPPAGE_PROTECTION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ],
          "name": "addPool",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "batchExecuteRevealed",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "name": "commitOrder",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "commitments",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revealed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "getCommitmentStatus",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "commitment",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "revealed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                }
              ],
              "internalType": "struct IRouterDefense.CommitRevealOrder",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "name": "getOptimalRoute",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "percentage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IRouterDefense.Route[]",
              "name": "routes",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "expectedAmountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getRevealedOrdersCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IRouterDefense.SwapParams",
              "name": "params",
              "type": "tuple"
            }
          ],
          "name": "protectedSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IRouterDefense.SwapParams",
              "name": "params",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "name": "revealAndExecute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "revealedOrders",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "supportedPools",
          "outputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "tokenPairPools",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "usedCommitments",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ]
    },
    "CrossChainRouter": {
      "address": "0x22A8C0BD01f88D3461c98E9bc3399A83dDBB9Cee",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "bridge",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            }
          ],
          "name": "BridgeAdded",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "bridge",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            }
          ],
          "name": "BridgeRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "srcChainId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dstChainId",
              "type": "uint256"
            }
          ],
          "name": "CrossChainCommitmentMade",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "swapId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "bridgeFee",
              "type": "uint256"
            }
          ],
          "name": "CrossChainSwapCompleted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "swapId",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "srcChainId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dstChainId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "srcToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "dstToken",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "name": "CrossChainSwapInitiated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "AXELAR_GATEWAY",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "COMMITMENT_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "LAYERZERO_ENDPOINT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_SLIPPAGE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "estimatedTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            }
          ],
          "name": "addBridge",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "srcChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "name": "commitCrossChainOrder",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "completedSwaps",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "name": "crossChainCommitments",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "srcChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "revealed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "srcChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "estimateCrossChainFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "estimatedTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "srcChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstChainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "getOptimalBridge",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "bridgeAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "estimatedTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ICrossChainRouter.BridgeInfo",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getSupportedChains",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "getUserCommitments",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "srcChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dstChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "srcToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dstToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "bridgeData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ICrossChainRouter.CrossChainSwapParams",
              "name": "params",
              "type": "tuple"
            }
          ],
          "name": "initiateCrossChainSwap",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "swapId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bridgeAddress",
              "type": "address"
            }
          ],
          "name": "removeBridge",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "srcChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dstChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "srcToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dstToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "bridgeData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ICrossChainRouter.CrossChainSwapParams",
              "name": "params",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "name": "revealCrossChainOrder",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "swapId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "supportedBridges",
          "outputs": [
            {
              "internalType": "address",
              "name": "bridgeAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "estimatedTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "supportedChainIds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "userCommitments",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    },
    "AIStrategyOptimizer": {
      "address": "0xc6aF426FC11BFb6d46ffaB9A57c30ab5437AA09C",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "confidenceScore",
              "type": "uint256"
            }
          ],
          "name": "AIRecommendationGenerated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "modelType",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "accuracy",
              "type": "uint256"
            }
          ],
          "name": "ModelUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "signal",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "strength",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "confidence",
              "type": "uint256"
            }
          ],
          "name": "TradingSignalUpdated",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MAX_CONFIDENCE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MIN_LIQUIDITY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "VOLATILITY_THRESHOLD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "activeModels",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "name": "addTrackedToken",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "name": "aiModels",
          "outputs": [
            {
              "internalType": "string",
              "name": "modelType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accuracy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "name": "assessRisk",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "volatilityRisk",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityRisk",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageRisk",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasRisk",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overallRisk",
                  "type": "uint256"
                },
                {
                  "internalType": "string[]",
                  "name": "warnings",
                  "type": "string[]"
                }
              ],
              "internalType": "struct IAIStrategyOptimizer.RiskAssessment",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSlippage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxGasPrice",
              "type": "uint256"
            }
          ],
          "name": "getOptimalRoute",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "percentages",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedGasCost",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "confidenceScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeEstimate",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "strategyData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IAIStrategyOptimizer.AIRouteRecommendation",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "name": "getPersonalizedStrategy",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "percentages",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedGasCost",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expectedSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "confidenceScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeEstimate",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "strategyData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IAIStrategyOptimizer.AIRouteRecommendation",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "name": "getPriorityScore",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeframe",
              "type": "uint256"
            }
          ],
          "name": "getTradingSignal",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "signal",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "strength",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "targetPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "confidence",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeHorizon",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "internalType": "struct IAIStrategyOptimizer.TradingSignal",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "marketData",
          "outputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "volume24h",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "priceChange24h",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "volatility",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "name": "modelVersions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "pairVolatilityIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "name": "predictOptimalTiming",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "optimalTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confidence",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "trackedTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "tradingSignals",
          "outputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "signal",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "strength",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "targetPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "confidence",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeHorizon",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "trainingData",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "modelType",
              "type": "string"
            }
          ],
          "name": "trainModel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "volume24h",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "priceChange24h",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "volatility",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAIStrategyOptimizer.MarketData[]",
              "name": "data",
              "type": "tuple[]"
            }
          ],
          "name": "updateMarketData",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "score",
              "type": "uint256"
            }
          ],
          "name": "updateUserReputation",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "userReputationScores",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    },
    "QuantGuardPro": {
      "address": "0xb10a0b0f6282024D5c3b5256CB312D06177cF4ab",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_traderAgent",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_routerDefense",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_crossChainRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aiOptimizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "name": "EmergencyStop",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "successfulTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "totalPnL",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDrawdown",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharpeRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "avgTradeSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTime",
                  "type": "uint256"
                }
              ],
              "indexed": false,
              "internalType": "struct QuantGuardPro.PerformanceMetrics",
              "name": "metrics",
              "type": "tuple"
            }
          ],
          "name": "PerformanceUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "riskType",
              "type": "string"
            }
          ],
          "name": "RiskLimitTriggered",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum QuantGuardPro.StrategyType",
              "name": "strategyType",
              "type": "uint8"
            }
          ],
          "name": "StrategyCreated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "int256",
              "name": "pnl",
              "type": "int256"
            }
          ],
          "name": "StrategyExecuted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "name": "StrategyPaused",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "name": "StrategyResumed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "MANAGEMENT_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MAX_STRATEGIES_PER_USER",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "PERFORMANCE_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "name": "activateStrategy",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "aiOptimizer",
          "outputs": [
            {
              "internalType": "contract IAIStrategyOptimizer",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "name": "authorizedExecutors",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "enum QuantGuardPro.StrategyType",
              "name": "strategyType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxPositionSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebalanceInterval",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stopLossThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takeProfitThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bool",
                  "name": "enableCrossChain",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "enableMEVProtection",
                  "type": "bool"
                }
              ],
              "internalType": "struct QuantGuardPro.StrategyConfig",
              "name": "config",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDailyLoss",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPositionConcentration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "volatilityThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "enableEmergencyStop",
                  "type": "bool"
                }
              ],
              "internalType": "struct QuantGuardPro.RiskParameters",
              "name": "riskParams",
              "type": "tuple"
            }
          ],
          "name": "createStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "crossChainRouter",
          "outputs": [
            {
              "internalType": "contract ICrossChainRouter",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "name": "emergencyStopStrategy",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "name": "executeStrategy",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "name": "getStrategyDetails",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "enum QuantGuardPro.StrategyType",
                  "name": "strategyType",
                  "type": "uint8"
                },
                {
                  "internalType": "enum QuantGuardPro.StrategyStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxPositionSize",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSlippage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxGasPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rebalanceInterval",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stopLossThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "takeProfitThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address[]",
                      "name": "allowedTokens",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "allocations",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "enableCrossChain",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "enableMEVProtection",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct QuantGuardPro.StrategyConfig",
                  "name": "config",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalTrades",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "successfulTrades",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "totalPnL",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalVolume",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxDrawdown",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sharpeRatio",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "avgTradeSize",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct QuantGuardPro.PerformanceMetrics",
                  "name": "performance",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "createdAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastExecuted",
                  "type": "uint256"
                }
              ],
              "internalType": "struct QuantGuardPro.QuantStrategy",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "name": "getStrategyPerformance",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "successfulTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "totalPnL",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDrawdown",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharpeRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "avgTradeSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct QuantGuardPro.PerformanceMetrics",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "getUserStrategies",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "nextStrategyId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "pause",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "name": "pauseStrategy",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "name": "resumeStrategy",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "routerDefense",
          "outputs": [
            {
              "internalType": "contract IRouterDefense",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "executor",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "authorized",
              "type": "bool"
            }
          ],
          "name": "setAuthorizedExecutor",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "enum QuantGuardPro.StrategyType",
              "name": "strategyType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxPositionSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebalanceInterval",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stopLossThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takeProfitThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bool",
                  "name": "enableCrossChain",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "enableMEVProtection",
                  "type": "bool"
                }
              ],
              "internalType": "struct QuantGuardPro.StrategyConfig",
              "name": "config",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "simulationPeriod",
              "type": "uint256"
            }
          ],
          "name": "simulateStrategy",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "successfulTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "totalPnL",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDrawdown",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharpeRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "avgTradeSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct QuantGuardPro.PerformanceMetrics",
              "name": "simulatedPerformance",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "strategies",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "enum QuantGuardPro.StrategyType",
              "name": "strategyType",
              "type": "uint8"
            },
            {
              "internalType": "enum QuantGuardPro.StrategyStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxPositionSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebalanceInterval",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stopLossThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takeProfitThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bool",
                  "name": "enableCrossChain",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "enableMEVProtection",
                  "type": "bool"
                }
              ],
              "internalType": "struct QuantGuardPro.StrategyConfig",
              "name": "config",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "successfulTrades",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "totalPnL",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDrawdown",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharpeRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "avgTradeSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct QuantGuardPro.PerformanceMetrics",
              "name": "performance",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastExecuted",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "strategyRisks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxDailyLoss",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPositionConcentration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "volatilityThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidityThreshold",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "enableEmergencyStop",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "traderAgent",
          "outputs": [
            {
              "internalType": "contract ITraderAgent",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "unpause",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_traderAgent",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_routerDefense",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_crossChainRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_aiOptimizer",
              "type": "address"
            }
          ],
          "name": "updateCoreComponents",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDailyLoss",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPositionConcentration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "volatilityThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "enableEmergencyStop",
                  "type": "bool"
                }
              ],
              "internalType": "struct QuantGuardPro.RiskParameters",
              "name": "newRiskParams",
              "type": "tuple"
            }
          ],
          "name": "updateRiskParameters",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxPositionSize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebalanceInterval",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stopLossThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takeProfitThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "allowedTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "allocations",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bool",
                  "name": "enableCrossChain",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "enableMEVProtection",
                  "type": "bool"
                }
              ],
              "internalType": "struct QuantGuardPro.StrategyConfig",
              "name": "newConfig",
              "type": "tuple"
            }
          ],
          "name": "updateStrategyConfig",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "userStrategies",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ]
    }
  },
  "external": {
    "uniswapRouter": "0x4c4eABd5Fb1D1A7234A48692551eAECFF8194CA7",
    "weth": "0xB5a30b0FDc5EA94A52fDc42e3E9760Cb8449Fb37",
    "usdc": "0xf817257fed379853cDe0fa4F97AB987181B1E5Ea",
    "dai": "0xA3dbBD3887228aE84f08bE839f9e20485759a004"
  }
}